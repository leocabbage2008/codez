{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction resolveType(props) {\n  var _props$as;\n\n  if (props.type) return props.type;\n  var tag = (_props$as = props.as) != null ? _props$as : 'button';\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';\n  return undefined;\n}\n\nfunction useResolveButtonType(props, ref) {\n  var _useState = useState(function () {\n    return resolveType(props);\n  }),\n      type = _useState[0],\n      setType = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    setType(resolveType(props));\n  }, [props.type, props.as]);\n  useIsoMorphicEffect(function () {\n    if (type) return;\n    if (!ref.current) return;\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button');\n    }\n  }, [type, ref]);\n  return type;\n}\n\nexport { useResolveButtonType };","map":null,"metadata":{},"sourceType":"module"}