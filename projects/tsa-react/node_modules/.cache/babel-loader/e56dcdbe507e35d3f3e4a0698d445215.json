{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useContext, useRef, useCallback, useMemo, createContext, useState, Fragment } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { Description, useDescriptions } from '../description/description.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\nimport { Label, useLabels } from '../label/label.esm.js';\nvar GroupContext = /*#__PURE__*/createContext(null);\nGroupContext.displayName = 'GroupContext'; // ---\n\nvar DEFAULT_GROUP_TAG = Fragment;\n\nfunction Group(props) {\n  var _useState = useState(null),\n      switchElement = _useState[0],\n      setSwitchElement = _useState[1];\n\n  var _useLabels = useLabels(),\n      labelledby = _useLabels[0],\n      LabelProvider = _useLabels[1];\n\n  var _useDescriptions = useDescriptions(),\n      describedby = _useDescriptions[0],\n      DescriptionProvider = _useDescriptions[1];\n\n  var context = useMemo(function () {\n    return {\n      \"switch\": switchElement,\n      setSwitch: setSwitchElement,\n      labelledby: labelledby,\n      describedby: describedby\n    };\n  }, [switchElement, setSwitchElement, labelledby, describedby]);\n  return React.createElement(DescriptionProvider, {\n    name: \"Switch.Description\"\n  }, React.createElement(LabelProvider, {\n    name: \"Switch.Label\",\n    props: {\n      onClick: function onClick() {\n        if (!switchElement) return;\n        switchElement.click();\n        switchElement.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, React.createElement(GroupContext.Provider, {\n    value: context\n  }, render({\n    props: props,\n    defaultTag: DEFAULT_GROUP_TAG,\n    name: 'Switch.Group'\n  }))));\n} // ---\n\n\nvar DEFAULT_SWITCH_TAG = 'button';\n\nfunction Switch(props) {\n  var checked = props.checked,\n      onChange = props.onChange,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"checked\", \"onChange\"]);\n\n  var id = \"headlessui-switch-\" + useId();\n  var groupContext = useContext(GroupContext);\n  var internalSwitchRef = useRef(null);\n  var switchRef = useSyncRefs(internalSwitchRef, groupContext === null ? null : groupContext.setSwitch);\n  var toggle = useCallback(function () {\n    return onChange(!checked);\n  }, [onChange, checked]);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    event.preventDefault();\n    toggle();\n  }, [toggle]);\n  var handleKeyUp = useCallback(function (event) {\n    if (event.key !== Keys.Tab) event.preventDefault();\n    if (event.key === Keys.Space) toggle();\n  }, [toggle]); // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n\n  var handleKeyPress = useCallback(function (event) {\n    return event.preventDefault();\n  }, []);\n  var slot = useMemo(function () {\n    return {\n      checked: checked\n    };\n  }, [checked]);\n  var propsWeControl = {\n    id: id,\n    ref: switchRef,\n    role: 'switch',\n    type: useResolveButtonType(props, internalSwitchRef),\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext == null ? void 0 : groupContext.labelledby,\n    'aria-describedby': groupContext == null ? void 0 : groupContext.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress\n  };\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch'\n  });\n} // ---\n\n\nSwitch.Group = Group;\nSwitch.Label = Label;\nSwitch.Description = Description;\nexport { Switch };","map":null,"metadata":{},"sourceType":"module"}